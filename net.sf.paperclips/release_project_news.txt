PaperClips 1.0.1 released

This is a maintenance release to address printing issues on Mac OS X.

Updates in this release:
* Bugs fixed:
  * Document clipping problems on Mac OS X.
  * PrintPreview.getPageCount() returns 0 before pages are first drawn.
  * PrintPreview spits out a blank page on Linux when the window is closed.
  * Changed ImageCaptureExample.java to capture JPG since PNG was not fully supported until SWT version 3.3 (PaperClips is developed against 3.2).
  * BorderPrint sometimes showed an open bottom border even though the target was completely shown.
  * PrintViewer performance improvements when print document is vertically greedy.
* New Features:
  * GridPrint.setCellClippingEnabled() controls whether grid cells may be broken across pages.  See GridPrintCellClippingExample.java.
  * DefaultGridLook.setCellPadding()
  * PrintPreview.setHorizontalPageCount() and .setVerticalPageCount() controls how many pages are shown on screen.
  * Experimental PaperClips.setDebug() API helps troubleshoot documents that won't lay out properly ("Unable to layout on page X" errors).
  * BasicGridLookPainter simplifies implementing custom GridLooks.
  * StyledTextPrint for mixing text with different font sizes, styles, colors and decorations.  Other printable objects such as ImagePrint may be embedded inline with the text.
  * TextPrint and StyledTextPrint support underline and strikeout text.
  * TextPrint.setWordSplitting() controls whether words may be split between rows.  This feature only applies when space is very limited.
  * Unified error reporting to PaperClips.error() methods.  Custom Print implementations should use these methods to act uniformly with the rest of the library. 
* Enhanced print preview snippet (Snippet7):
  * Support scrolling with the mouse wheel (horizontally with Shift+Wheel)
  * Support zooming with Ctrl+Wheel

PaperClips is a simple, light weight, extensible printing library for SWT.  PaperClips hides the complexity of laying out and rendering documents on the printer, helping you to focus on what you want to print instead of how you're going to print it.

In a nutshell, PaperClips provides an assortment of document "building blocks", which you can tweak and combine to form a document. The assembled document is then sent to PaperClips for printing. PaperClips includes built-in support for printing text, images, borders, headers and footers, column layouts and tabular (grid) layouts.  PaperClips is designed to be extensible, so you can code your own printable document elements.

PaperClips depends on the SWT library, a project of the Eclipse Foundation. The SWT library may be downloaded from the Eclipse site: http://www.eclipse.org/swt/

Project web page: http://paperclips.sourceforge.net/
Download page: http://sourceforge.net/project/showfiles.php?group_id=148509
Subversion: https://paperclips.svn.sourceforge.net/svnroot/paperclips/trunk/net.sf.paperclips/
